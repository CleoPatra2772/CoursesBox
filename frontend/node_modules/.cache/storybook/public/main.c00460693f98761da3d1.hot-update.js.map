{"version":3,"file":"main.c00460693f98761da3d1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;AAGA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAaA;AAKA;AAAA;AAAA;;AACA;AACA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AALA;AAQA;AAhBA","sources":["webpack://coursesbox/./component/Input/Input.tsx"],"sourcesContent":["import { FC, ChangeEventHandler, InputHTMLAttributes, ReactNode } from 'react';\nimport styled from \"@emotion/styled\";\nimport { boxShadow } from '../styles';\nimport { useId } from '@/component/hooks/useId';\nimport { AvailableIcons } from '../Icon';\n\nconst StyledInput = styled.input`\nall: unset;\nwidth: 20rem;\nheight: 4rem;\nborder-radius: 1rem;\nfont-size: 1.4rem;\npadding-left: 1.4rem;\ncolor: ${({ theme }) => theme.font.regular};\n${({ theme }) =>\n    boxShadow(theme.components.shadow1, theme.components.shadow2, true)}\n  &::placeholder {\n    color: ${({ theme }) => theme.font.placeholder};\n  }\n  &:focus {\n    ${({ theme }) =>\n      boxShadow(theme.components.shadow1, theme.components.shadow2)}\n    ~ svg {\n      color: ${({ theme }) => theme.font.regular};\n      opacity: 1;\n    }\n  }\n`;\n\nconst Label = styled.label`\ncolor: ${({ theme }) => theme.font.regular};\nfont-size: 1rem;\npadding-left: 1.4rem;\n`;\n\n\nexport type Props = {\n    label: string;\n    onChange: ChangeEventHandler<HTMLInputElement>;\n    icon?: AvailableIcons;\n    feedback?: ReactNode;\n};\n\nexport const Input: FC<Props & InputHTMLAttributes <HTMLInputElement>> = ({\n    label,\n    feedback,\n    ...props\n    \n}) => {\n    const fieldId = useId();\n    return (\n    <label>\n        {label}\n        <br />\n        <StyledInput id={fieldId} { ...props} />\n        <br />\n        <label htmlFor={fieldId}>{feedback}</label>\n    </label>\n    )\n}"],"names":[],"sourceRoot":""}