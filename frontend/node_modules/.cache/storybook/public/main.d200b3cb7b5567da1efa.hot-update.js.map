{"version":3,"file":"main.d200b3cb7b5567da1efa.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;;;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;;AAKA;AAAA;;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;;AAVA;;AAYA;AAAA;AACA;AACA;AAAA;AADA;AADA;;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAXA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAGA","sources":["webpack://coursesbox/./.storybook/preview.js","webpack://coursesbox/./styles/global.ts"],"sourcesContent":["import * as NextImage from \"next/image\";\nimport { ThemeProvider, Global } from \"@emotion/react\";\n\nimport { Themes } from '../styles/themes';\nimport { GlobalStyles } from '../styles/global';\n\nconst OriginalNextImage = NextImage.default;\n\nObject.defineProperty(NextImage, \"default\", {\n  configurable: true,\n  value: (props) => <OriginalNextImage {...props} unoptimized />,\n});\n\nconst withThemeProvider = (Story, context) => {\n  const background = context.globals.backgrounds ?.value || parameters.backgrounds.defaultColor;\n  \n  const theme = Object.values(Themes).find(theme => theme.background === background);\n  \n  return (\n    <ThemeProvider theme={theme}>\n    <Story { ...context}/>\n    </ThemeProvider>\n  );\n};\n\nconst withGlobalStyles = (Story, context) => (\n  <>\n    <Global styles={GlobalStyles} />\n    <Story {...context} />\n  </>\n)\n\nexport const decorators = [withThemeProvider, withGlobalStyles];\n\n\n\nexport const parameters = {\n  backgrounds: {\n    default: 'dark',\n    defaultColor: '#5e5c64',\n    values: [\n      { name: 'dark', value: '#5e5c64'},\n      { name: 'light', value: '#e4ebf5'},\n    ],\n  },\n\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n}","import { css } from \"@emotion/react\";\n\n\nexport const GlobalStyles = css `\n*{\n    font-family: \"Poppins\", sans-serif;\n}`;"],"names":[],"sourceRoot":""}