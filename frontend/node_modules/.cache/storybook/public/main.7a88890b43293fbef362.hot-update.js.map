{"version":3,"file":"main.7a88890b43293fbef362.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;AAOA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAKA;AAIA;AAAA;AAAA;AAWA;AAMA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AANA;AASA;AAlBA","sources":["webpack://coursesbox/./component/Input/Input.tsx"],"sourcesContent":["import { FC, ChangeEventHandler, InputHTMLAttributes, ReactNode } from 'react';\nimport styled from \"@emotion/styled\";\nimport { boxShadow } from '../styles';\nimport { useId } from '@/component/hooks/useId';\nimport { AvailableIcons, Icon } from '../Icon';\n\ntype StyledInputProps = {\n    withIcon: boolean;\n  };\n\n\nconst StyledInput = styled.input<StyledInputProps>`\nall: unset;\nwidth: 20rem;\nheight: 4rem;\nborder-radius: 1rem;\nfont-size: 1.4rem;\npadding-left: padding-left: ${({ withIcon }) => (withIcon ? 2.8 : 1.4)}rem;\ncolor: ${({ theme }) => theme.font.regular};\n${({ theme }) =>\n    boxShadow(theme.components.shadow1, theme.components.shadow2, true)}\n  &::placeholder {\n    color: ${({ theme }) => theme.font.placeholder};\n  }\n  &:focus {\n    ${({ theme }) =>\n      boxShadow(theme.components.shadow1, theme.components.shadow2)}\n    ~ svg {\n      color: ${({ theme }) => theme.font.regular};\n      opacity: 1;\n\n    }\n  }\n`;\n\nconst Label = styled.label`\ncolor: ${({ theme }) => theme.font.regular};\nfont-size: 1rem;\npadding-left: 1.4rem;\n`;\n\nconst StyledIcon = styled(Icon)`\ndisplay: block;\nmargin-top: -3rem;\npadding-left: 0.5rem;\ncolor:${({ theme }) => theme.font.placeholder};\nopacity: 0.7;\n`;\n\nexport type Props = {\n    label: string;\n    onChange: ChangeEventHandler<HTMLInputElement>;\n    icon?: AvailableIcons;\n    feedback?: ReactNode;\n};\n\nexport const Input: FC<Props & InputHTMLAttributes <HTMLInputElement>> = ({\n    label,\n    icon,\n    feedback,\n    ...props\n    \n}) => {\n    const fieldId = useId();\n    return (\n    <label>\n        {label}\n        <br />\n        <StyledInput id={fieldId} { ...props} />\n        {icon && <StyledIcon name={icon} />}\n        <br />\n        <label htmlFor={fieldId}>{feedback}</label>\n    </label>\n    )\n}"],"names":[],"sourceRoot":""}